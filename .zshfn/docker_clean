local containers=${(f)"$(docker ps -aq 2>/dev/null)"}
docker rm "${containers[*]}" 2>/dev/null
local volumes=${(f)"$(docker ps --filter status=exited -q 2>/dev/null)"}
docker rm -v "${volumes[*]}" 2>/dev/null
local images=${(f)"$(docker images --filter dangling=true -q 2>/dev/null)"}
docker rmi "${images[*]}" 2>/dev/null

# # creates an nginx config for a local route
# nginx_config(){
# 	server=$1
# 	route=$2

# 	cat >"${HOME}/.nginx/conf.d/${server}.conf" <<-EOF
# 	upstream ${server} { server ${route}; }
# 	server {
# 	server_name ${server};
# 	location / {
# 	proxy_pass  http://${server};
# 	proxy_http_version 1.1;
# 	proxy_set_header Upgrade \$http_upgrade;
# 	proxy_set_header Connection "upgrade";
# 	proxy_set_header Host \$http_host;
# 	proxy_set_header X-Forwarded-Proto \$scheme;
# 	proxy_set_header X-Forwarded-For \$remote_addr;
# 	proxy_set_header X-Forwarded-Port \$server_port;
# 	proxy_set_header X-Request-Start \$msec;
# }
# 	}
# 	EOF

# 	# restart nginx
# 	docker restart nginx

# 	# add host to /etc/hosts
# 	hostess add "$server" 127.0.0.1

# 	# open browser
# 	browser-exec "http://${server}"
# }
